(require 'bindings-init)
(require 'dash)
(require 'evil)
(require 's)
(require 'undo-tree)

;;; empty all keymaps
(setq evil-insert-state-map (make-sparse-keymap))
(setq evil-normal-state-map (make-sparse-keymap))
(setq evil-visual-state-map (make-sparse-keymap))
(setq evil-motion-state-map (make-sparse-keymap))
(setq evil-emacs-state-map global-map)
(setq original-global-map global-map)
(setq global-map (make-sparse-keymap))
(use-global-map global-map)

;;; helper function for defining custom evil keys
(defun satan-define-key (register-insert key func)
  (define-key-with-modifier "M-" evil-normal-state-map nil key func)
  (define-key-with-modifier "M-" evil-visual-state-map nil key func)
  (define-key-with-modifier "M-" evil-motion-state-map nil key func)
  (define-key-with-modifier "M-" evil-insert-state-map (not register-insert) key func))

;;; minibuffer key definition
(substitute-key-definition 'self-insert-command 'self-insert-command minibuffer-local-map original-global-map)
(define-key minibuffer-local-map (kbd "DEL") 'delete-backward-char)
(define-key minibuffer-local-map (kbd "<delete>") 'delete-forward-char)
(define-key minibuffer-local-map (kbd "ESC ESC") 'abort-recursive-edit)

;;; mode changing key definitions
(define-key evil-normal-state-map (kbd "SPC") 'evil-insert)
(define-key-with-modifier "M-" evil-normal-state-map nil "C-z" 'evil-emacs-state)
(define-key evil-insert-state-map (kbd "M-SPC") 'evil-normal-state)
(define-key evil-insert-state-map (kbd "ESC ESC") 'evil-normal-state)
(define-key-with-modifier "M-" evil-insert-state-map nil "C-z" 'evil-emacs-state)
(define-key-with-modifier "M-" evil-emacs-state-map nil "C-z" 'evil-normal-state)
(global-set-key (kbd "C-z") 'evil-mode)
(global-set-key (kbd "C-M-z") 'evil-mode)

;;; basic global key definitions
(global-set-key (kbd "<mouse-1>") 'mouse-set-point)
(global-set-key (kbd "<mouse-4>") 'mwheel-scroll)
(global-set-key (kbd "<mouse-5>") 'mwheel-scroll)
(global-set-key (kbd "<vertical-scroll-bar> <mouse-1>") 'scroll-bar-toolkit-scroll)

;;; normal map key definition
(satan-define-key t   "<left>" 'backward-char)
(satan-define-key t   "<right>" 'forward-char)
(satan-define-key t   "<up>" 'previous-line)
(satan-define-key t   "<down>" 'next-line)
(satan-define-key nil "s" 'backward-char)
(satan-define-key nil "f" 'forward-char)
(satan-define-key nil "e" 'previous-line)
(satan-define-key nil "d" 'next-line)
(satan-define-key nil "j" 'evil-scroll-column-left)
(satan-define-key nil "l" 'evil-scroll-column-right)
(satan-define-key nil "i" 'scroll-down-line)
(satan-define-key nil "k" 'scroll-up-line)
(satan-define-key t   "DEL" 'delete-backward-char)
(satan-define-key t   "<delete>" 'delete-char)
(satan-define-key nil "t" 'delete-backward-char)
(satan-define-key nil "y" 'delete-char)
(satan-define-key t   "TAB" 'indent-for-tab-command)
(satan-define-key t   "RET" 'newline)
(satan-define-key nil "u" 'undo)
(satan-define-key nil "b" 'execute-extended-command)
(satan-define-key t   "<home>" 'move-beginning-of-line)
(satan-define-key t   "<end>" 'move-end-of-line)
(satan-define-key t   "<prior>" 'scroll-down)
(satan-define-key t   "<next>" 'scroll-up)
(satan-define-key nil "h s" 'move-beginning-of-line)
(satan-define-key nil "h f" 'move-end-of-line)
(satan-define-key nil "h e" 'scroll-down)
(satan-define-key nil "h d" 'scroll-up)
(satan-define-key t   "<C-prior>" 'previous-buffer)
(satan-define-key t   "<C-next>" 'next-buffer)
(satan-define-key nil "g j" 'previous-buffer)
(satan-define-key nil "g l" 'next-buffer)
(satan-define-key nil "g o" 'find-file)
(satan-define-key nil "g RET" 'save-buffer)
(satan-define-key nil "h w" 'kill-this-buffer)
(satan-define-key nil "C-SPC" 'set-mark-command)
(satan-define-key nil "v" 'kill-ring-save)
(satan-define-key nil "V" 'kill-region)
(satan-define-key nil "n" 'yank)
(satan-define-key nil "c" 'isearch-backward)
(satan-define-key nil "m" 'isearch-forward)

(satan-define-key nil "h 1" 'delete-other-windows)

(satan-define-key nil "? v" 'describe-variable)
(satan-define-key nil "? f" 'describe-function)
(satan-define-key nil "? k" 'describe-key)

;;; insert map key definition
(substitute-key-definition 'self-insert-command 'self-insert-command evil-insert-state-map evil-emacs-state-map)

(provide 'bindings-evil)
